// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.11.4
// source: cloud_wallet.proto

package cloud_wallet

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type CloudWalletErrCode int32

const (
	CloudWalletErrCode_ESC         CloudWalletErrCode = 0
	CloudWalletErrCode_ServerError CloudWalletErrCode = 9999 // 9999 服务器错误
	// 1000- 1999 云钱包相关错误
	CloudWalletErrCode_PacketStatusIsCreate    CloudWalletErrCode = 1000 // 红包状态是创建
	CloudWalletErrCode_PacketStatusIsFinish    CloudWalletErrCode = 1001 // 红包状态是完成
	CloudWalletErrCode_PacketStatusIsExpire    CloudWalletErrCode = 1002 // 红包状态是过期
	CloudWalletErrCode_PacketStatusIsExclusive CloudWalletErrCode = 1003 // 红包状态是独占
	CloudWalletErrCode_PacketStatusIsReceived  CloudWalletErrCode = 1004 // 红包状态是取消
)

// Enum value maps for CloudWalletErrCode.
var (
	CloudWalletErrCode_name = map[int32]string{
		0:    "ESC",
		9999: "ServerError",
		1000: "PacketStatusIsCreate",
		1001: "PacketStatusIsFinish",
		1002: "PacketStatusIsExpire",
		1003: "PacketStatusIsExclusive",
		1004: "PacketStatusIsReceived",
	}
	CloudWalletErrCode_value = map[string]int32{
		"ESC":                     0,
		"ServerError":             9999,
		"PacketStatusIsCreate":    1000,
		"PacketStatusIsFinish":    1001,
		"PacketStatusIsExpire":    1002,
		"PacketStatusIsExclusive": 1003,
		"PacketStatusIsReceived":  1004,
	}
)

func (x CloudWalletErrCode) Enum() *CloudWalletErrCode {
	p := new(CloudWalletErrCode)
	*p = x
	return p
}

func (x CloudWalletErrCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CloudWalletErrCode) Descriptor() protoreflect.EnumDescriptor {
	return file_cloud_wallet_proto_enumTypes[0].Descriptor()
}

func (CloudWalletErrCode) Type() protoreflect.EnumType {
	return &file_cloud_wallet_proto_enumTypes[0]
}

func (x CloudWalletErrCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CloudWalletErrCode.Descriptor instead.
func (CloudWalletErrCode) EnumDescriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{0}
}

// 通用消息回复组件
type CommonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode CloudWalletErrCode `protobuf:"varint,1,opt,name=errCode,proto3,enum=cloud_wallet.CloudWalletErrCode" json:"errCode,omitempty"` //非0既有异常
	ErrMsg  string             `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
}

func (x *CommonResp) Reset() {
	*x = CommonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_wallet_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonResp) ProtoMessage() {}

func (x *CommonResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_wallet_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonResp.ProtoReflect.Descriptor instead.
func (*CommonResp) Descriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{0}
}

func (x *CommonResp) GetErrCode() CloudWalletErrCode {
	if x != nil {
		return x.ErrCode
	}
	return CloudWalletErrCode_ESC
}

func (x *CommonResp) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

//1. 获取云账户信息
type UserNcountAccountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      int32  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`          //用户id
	OperationID string `protobuf:"bytes,2,opt,name=operationID,proto3" json:"operationID,omitempty"` //链路跟踪id
}

func (x *UserNcountAccountReq) Reset() {
	*x = UserNcountAccountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_wallet_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserNcountAccountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserNcountAccountReq) ProtoMessage() {}

func (x *UserNcountAccountReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_wallet_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserNcountAccountReq.ProtoReflect.Descriptor instead.
func (*UserNcountAccountReq) Descriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{1}
}

func (x *UserNcountAccountReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserNcountAccountReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type UserNcountAccountResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Step             int32            `protobuf:"varint,1,opt,name=step,proto3" json:"step,omitempty"`                        //步骤
	IdCard           string           `protobuf:"bytes,2,opt,name=idCard,proto3" json:"idCard,omitempty"`                     //身份证
	RealName         string           `protobuf:"bytes,3,opt,name=realName,proto3" json:"realName,omitempty"`                 //真实姓名
	AccountStatus    int32            `protobuf:"varint,4,opt,name=accountStatus,proto3" json:"accountStatus,omitempty"`      //账户开通状态
	BalAmount        string           `protobuf:"bytes,5,opt,name=balAmount,proto3" json:"balAmount,omitempty"`               //账户余额
	AvailableBalance string           `protobuf:"bytes,6,opt,name=availableBalance,proto3" json:"availableBalance,omitempty"` //可用余额
	BindCardsList    []*BindCardsList `protobuf:"bytes,7,rep,name=bindCardsList,proto3" json:"bindCardsList,omitempty"`       //绑定的银行卡列表
	CommonResp       *CommonResp      `protobuf:"bytes,8,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
}

func (x *UserNcountAccountResp) Reset() {
	*x = UserNcountAccountResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_wallet_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserNcountAccountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserNcountAccountResp) ProtoMessage() {}

func (x *UserNcountAccountResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_wallet_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserNcountAccountResp.ProtoReflect.Descriptor instead.
func (*UserNcountAccountResp) Descriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{2}
}

func (x *UserNcountAccountResp) GetStep() int32 {
	if x != nil {
		return x.Step
	}
	return 0
}

func (x *UserNcountAccountResp) GetIdCard() string {
	if x != nil {
		return x.IdCard
	}
	return ""
}

func (x *UserNcountAccountResp) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *UserNcountAccountResp) GetAccountStatus() int32 {
	if x != nil {
		return x.AccountStatus
	}
	return 0
}

func (x *UserNcountAccountResp) GetBalAmount() string {
	if x != nil {
		return x.BalAmount
	}
	return ""
}

func (x *UserNcountAccountResp) GetAvailableBalance() string {
	if x != nil {
		return x.AvailableBalance
	}
	return ""
}

func (x *UserNcountAccountResp) GetBindCardsList() []*BindCardsList {
	if x != nil {
		return x.BindCardsList
	}
	return nil
}

func (x *UserNcountAccountResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type BindCardsList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IndCardAgrNo string `protobuf:"bytes,1,opt,name=indCardAgrNo,proto3" json:"indCardAgrNo,omitempty"` //简写
	BankCode     string `protobuf:"bytes,2,opt,name=bankCode,proto3" json:"bankCode,omitempty"`         //银行
	CardNo       string `protobuf:"bytes,3,opt,name=cardNo,proto3" json:"cardNo,omitempty"`             //卡号
}

func (x *BindCardsList) Reset() {
	*x = BindCardsList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_wallet_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindCardsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindCardsList) ProtoMessage() {}

func (x *BindCardsList) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_wallet_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindCardsList.ProtoReflect.Descriptor instead.
func (*BindCardsList) Descriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{3}
}

func (x *BindCardsList) GetIndCardAgrNo() string {
	if x != nil {
		return x.IndCardAgrNo
	}
	return ""
}

func (x *BindCardsList) GetBankCode() string {
	if x != nil {
		return x.BankCode
	}
	return ""
}

func (x *BindCardsList) GetCardNo() string {
	if x != nil {
		return x.CardNo
	}
	return ""
}

//4. 云钱包收支明细
type CloudWalletRecordListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`           //用户id
	Date        string `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`               //日期
	PageNum     int32  `protobuf:"varint,3,opt,name=pageNum,proto3" json:"pageNum,omitempty"`        //页码
	PageSize    int32  `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty"`      //每页条数
	OperationID string `protobuf:"bytes,5,opt,name=operationID,proto3" json:"operationID,omitempty"` //链路跟踪id
}

func (x *CloudWalletRecordListReq) Reset() {
	*x = CloudWalletRecordListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_wallet_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloudWalletRecordListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudWalletRecordListReq) ProtoMessage() {}

func (x *CloudWalletRecordListReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_wallet_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudWalletRecordListReq.ProtoReflect.Descriptor instead.
func (*CloudWalletRecordListReq) Descriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{4}
}

func (x *CloudWalletRecordListReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CloudWalletRecordListReq) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *CloudWalletRecordListReq) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *CloudWalletRecordListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *CloudWalletRecordListReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type CloudWalletRecordListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     int32         `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"` //用户id
	Total      int32         `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	RecordList []*RecordList `protobuf:"bytes,3,rep,name=recordList,proto3" json:"recordList,omitempty"`
}

func (x *CloudWalletRecordListResp) Reset() {
	*x = CloudWalletRecordListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_wallet_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloudWalletRecordListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudWalletRecordListResp) ProtoMessage() {}

func (x *CloudWalletRecordListResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_wallet_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudWalletRecordListResp.ProtoReflect.Descriptor instead.
func (*CloudWalletRecordListResp) Descriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{5}
}

func (x *CloudWalletRecordListResp) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CloudWalletRecordListResp) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *CloudWalletRecordListResp) GetRecordList() []*RecordList {
	if x != nil {
		return x.RecordList
	}
	return nil
}

type RecordList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      int32   `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`            //用户id
	Type        int32   `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`                //类型 1充值 2提现 3消费 4退款 。。。 ？
	Amount      float32 `protobuf:"fixed32,3,opt,name=amount,proto3" json:"amount,omitempty"`           //变动金额
	AfterAmount float32 `protobuf:"fixed32,4,opt,name=afterAmount,proto3" json:"afterAmount,omitempty"` //变更后金额
	CreatedTime int64   `protobuf:"varint,5,opt,name=createdTime,proto3" json:"createdTime,omitempty"`  //变更时间
	Remark      string  `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark,omitempty"`             //备注
}

func (x *RecordList) Reset() {
	*x = RecordList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_wallet_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordList) ProtoMessage() {}

func (x *RecordList) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_wallet_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordList.ProtoReflect.Descriptor instead.
func (*RecordList) Descriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{6}
}

func (x *RecordList) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RecordList) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *RecordList) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *RecordList) GetAfterAmount() float32 {
	if x != nil {
		return x.AfterAmount
	}
	return 0
}

func (x *RecordList) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *RecordList) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

//5.获取用户的银行卡列表
type GetUserBankcardListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      int32  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`          //用户id
	OperationID string `protobuf:"bytes,2,opt,name=operationID,proto3" json:"operationID,omitempty"` //链路跟踪id
}

func (x *GetUserBankcardListReq) Reset() {
	*x = GetUserBankcardListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_wallet_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserBankcardListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserBankcardListReq) ProtoMessage() {}

func (x *GetUserBankcardListReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_wallet_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserBankcardListReq.ProtoReflect.Descriptor instead.
func (*GetUserBankcardListReq) Descriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{7}
}

func (x *GetUserBankcardListReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetUserBankcardListReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type GetUserBankcardListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BankCardList []*BankCardList `protobuf:"bytes,1,rep,name=bankCardList,proto3" json:"bankCardList,omitempty"`
}

func (x *GetUserBankcardListResp) Reset() {
	*x = GetUserBankcardListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_wallet_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserBankcardListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserBankcardListResp) ProtoMessage() {}

func (x *GetUserBankcardListResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_wallet_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserBankcardListResp.ProtoReflect.Descriptor instead.
func (*GetUserBankcardListResp) Descriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{8}
}

func (x *GetUserBankcardListResp) GetBankCardList() []*BankCardList {
	if x != nil {
		return x.BankCardList
	}
	return nil
}

type BankCardList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BankCardID     int32  `protobuf:"varint,1,opt,name=bankCardID,proto3" json:"bankCardID,omitempty"`        //银行卡id
	CardOwner      string `protobuf:"bytes,2,opt,name=cardOwner,proto3" json:"cardOwner,omitempty"`           //持卡者
	BankCardType   int32  `protobuf:"varint,3,opt,name=bankCardType,proto3" json:"bankCardType,omitempty"`    // 银行类型 （枚举值：和前端使用统一的新生支付支持银行卡类型）
	BankCardNumber string `protobuf:"bytes,4,opt,name=bankCardNumber,proto3" json:"bankCardNumber,omitempty"` //银行卡号 ****
	CreatedTime    string `protobuf:"bytes,5,opt,name=createdTime,proto3" json:"createdTime,omitempty"`       //绑定时间
}

func (x *BankCardList) Reset() {
	*x = BankCardList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_wallet_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BankCardList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BankCardList) ProtoMessage() {}

func (x *BankCardList) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_wallet_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BankCardList.ProtoReflect.Descriptor instead.
func (*BankCardList) Descriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{9}
}

func (x *BankCardList) GetBankCardID() int32 {
	if x != nil {
		return x.BankCardID
	}
	return 0
}

func (x *BankCardList) GetCardOwner() string {
	if x != nil {
		return x.CardOwner
	}
	return ""
}

func (x *BankCardList) GetBankCardType() int32 {
	if x != nil {
		return x.BankCardType
	}
	return 0
}

func (x *BankCardList) GetBankCardNumber() string {
	if x != nil {
		return x.BankCardNumber
	}
	return ""
}

func (x *BankCardList) GetCreatedTime() string {
	if x != nil {
		return x.CreatedTime
	}
	return ""
}

// 6.绑定用户银行卡
type BindUserBankcardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         int32  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`                //用户id
	CardOwner      string `protobuf:"bytes,2,opt,name=cardOwner,proto3" json:"cardOwner,omitempty"`           //持卡者
	BankCardType   int32  `protobuf:"varint,3,opt,name=bankCardType,proto3" json:"bankCardType,omitempty"`    //银行类型 （枚举值：和前端使用统一的新生支付支持银行卡类型）
	BankCardNumber string `protobuf:"bytes,4,opt,name=bankCardNumber,proto3" json:"bankCardNumber,omitempty"` //银行卡号
	Mobile         string `protobuf:"bytes,5,opt,name=mobile,proto3" json:"mobile,omitempty"`                 //手机号码
	OperationID    string `protobuf:"bytes,6,opt,name=operationID,proto3" json:"operationID,omitempty"`       //链路跟踪id
}

func (x *BindUserBankcardReq) Reset() {
	*x = BindUserBankcardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_wallet_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindUserBankcardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindUserBankcardReq) ProtoMessage() {}

func (x *BindUserBankcardReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_wallet_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindUserBankcardReq.ProtoReflect.Descriptor instead.
func (*BindUserBankcardReq) Descriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{10}
}

func (x *BindUserBankcardReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *BindUserBankcardReq) GetCardOwner() string {
	if x != nil {
		return x.CardOwner
	}
	return ""
}

func (x *BindUserBankcardReq) GetBankCardType() int32 {
	if x != nil {
		return x.BankCardType
	}
	return 0
}

func (x *BindUserBankcardReq) GetBankCardNumber() string {
	if x != nil {
		return x.BankCardNumber
	}
	return ""
}

func (x *BindUserBankcardReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *BindUserBankcardReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type BindUserBankcardResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BankCardId int32       `protobuf:"varint,1,opt,name=bankCardId,proto3" json:"bankCardId,omitempty"` //银行卡id
	MerOrderId string      `protobuf:"bytes,2,opt,name=merOrderId,proto3" json:"merOrderId,omitempty"`  //平台订单号
	CommonResp *CommonResp `protobuf:"bytes,3,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
}

func (x *BindUserBankcardResp) Reset() {
	*x = BindUserBankcardResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_wallet_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindUserBankcardResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindUserBankcardResp) ProtoMessage() {}

func (x *BindUserBankcardResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_wallet_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindUserBankcardResp.ProtoReflect.Descriptor instead.
func (*BindUserBankcardResp) Descriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{11}
}

func (x *BindUserBankcardResp) GetBankCardId() int32 {
	if x != nil {
		return x.BankCardId
	}
	return 0
}

func (x *BindUserBankcardResp) GetMerOrderId() string {
	if x != nil {
		return x.MerOrderId
	}
	return ""
}

func (x *BindUserBankcardResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

// 绑定用户银行卡确认
type BindUserBankcardConfirmReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      int32  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`          //用户id
	BankCardId  int32  `protobuf:"varint,2,opt,name=bankCardId,proto3" json:"bankCardId,omitempty"`  //银行卡id
	MerOrderId  string `protobuf:"bytes,3,opt,name=merOrderId,proto3" json:"merOrderId,omitempty"`   //平台订单号
	SmsCode     int32  `protobuf:"varint,4,opt,name=smsCode,proto3" json:"smsCode,omitempty"`        //验证码
	OperationID string `protobuf:"bytes,5,opt,name=operationID,proto3" json:"operationID,omitempty"` //链路跟踪id
}

func (x *BindUserBankcardConfirmReq) Reset() {
	*x = BindUserBankcardConfirmReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_wallet_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindUserBankcardConfirmReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindUserBankcardConfirmReq) ProtoMessage() {}

func (x *BindUserBankcardConfirmReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_wallet_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindUserBankcardConfirmReq.ProtoReflect.Descriptor instead.
func (*BindUserBankcardConfirmReq) Descriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{12}
}

func (x *BindUserBankcardConfirmReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *BindUserBankcardConfirmReq) GetBankCardId() int32 {
	if x != nil {
		return x.BankCardId
	}
	return 0
}

func (x *BindUserBankcardConfirmReq) GetMerOrderId() string {
	if x != nil {
		return x.MerOrderId
	}
	return ""
}

func (x *BindUserBankcardConfirmReq) GetSmsCode() int32 {
	if x != nil {
		return x.SmsCode
	}
	return 0
}

func (x *BindUserBankcardConfirmReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type BindUserBankcardConfirmResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BankCardId int32       `protobuf:"varint,1,opt,name=bankCardId,proto3" json:"bankCardId,omitempty"` //银行卡id
	CommonResp *CommonResp `protobuf:"bytes,2,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
}

func (x *BindUserBankcardConfirmResp) Reset() {
	*x = BindUserBankcardConfirmResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_wallet_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindUserBankcardConfirmResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindUserBankcardConfirmResp) ProtoMessage() {}

func (x *BindUserBankcardConfirmResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_wallet_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindUserBankcardConfirmResp.ProtoReflect.Descriptor instead.
func (*BindUserBankcardConfirmResp) Descriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{13}
}

func (x *BindUserBankcardConfirmResp) GetBankCardId() int32 {
	if x != nil {
		return x.BankCardId
	}
	return 0
}

func (x *BindUserBankcardConfirmResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

// 解绑绑定用户银行卡
type UnBindingUserBankcardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     int32 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`         //用户id
	BankCardId int32 `protobuf:"varint,2,opt,name=bankCardId,proto3" json:"bankCardId,omitempty"` //银行卡id
}

func (x *UnBindingUserBankcardReq) Reset() {
	*x = UnBindingUserBankcardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_wallet_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnBindingUserBankcardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnBindingUserBankcardReq) ProtoMessage() {}

func (x *UnBindingUserBankcardReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_wallet_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnBindingUserBankcardReq.ProtoReflect.Descriptor instead.
func (*UnBindingUserBankcardReq) Descriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{14}
}

func (x *UnBindingUserBankcardReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UnBindingUserBankcardReq) GetBankCardId() int32 {
	if x != nil {
		return x.BankCardId
	}
	return 0
}

type UnBindingUserBankcardResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
}

func (x *UnBindingUserBankcardResp) Reset() {
	*x = UnBindingUserBankcardResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_wallet_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnBindingUserBankcardResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnBindingUserBankcardResp) ProtoMessage() {}

func (x *UnBindingUserBankcardResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_wallet_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnBindingUserBankcardResp.ProtoReflect.Descriptor instead.
func (*UnBindingUserBankcardResp) Descriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{15}
}

func (x *UnBindingUserBankcardResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

// 7.设置用户支付密码
type SetPaymentSecretReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        int32  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`               //用户id
	PaymentSecret int64  `protobuf:"varint,2,opt,name=paymentSecret,proto3" json:"paymentSecret,omitempty"` //密码
	OperationID   string `protobuf:"bytes,3,opt,name=operationID,proto3" json:"operationID,omitempty"`      //链路跟踪id
}

func (x *SetPaymentSecretReq) Reset() {
	*x = SetPaymentSecretReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_wallet_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPaymentSecretReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPaymentSecretReq) ProtoMessage() {}

func (x *SetPaymentSecretReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_wallet_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPaymentSecretReq.ProtoReflect.Descriptor instead.
func (*SetPaymentSecretReq) Descriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{16}
}

func (x *SetPaymentSecretReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SetPaymentSecretReq) GetPaymentSecret() int64 {
	if x != nil {
		return x.PaymentSecret
	}
	return 0
}

func (x *SetPaymentSecretReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type SetPaymentSecretResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
}

func (x *SetPaymentSecretResp) Reset() {
	*x = SetPaymentSecretResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_wallet_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPaymentSecretResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPaymentSecretResp) ProtoMessage() {}

func (x *SetPaymentSecretResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_wallet_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPaymentSecretResp.ProtoReflect.Descriptor instead.
func (*SetPaymentSecretResp) Descriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{17}
}

func (x *SetPaymentSecretResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

// 8.用户密码认证  部分操作需要用户密码认证
type UserPaymentSecretAuthReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        int32  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`              //用户id
	PaymentSecret string `protobuf:"bytes,2,opt,name=paymentSecret,proto3" json:"paymentSecret,omitempty"` //密码
}

func (x *UserPaymentSecretAuthReq) Reset() {
	*x = UserPaymentSecretAuthReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_wallet_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPaymentSecretAuthReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPaymentSecretAuthReq) ProtoMessage() {}

func (x *UserPaymentSecretAuthReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_wallet_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPaymentSecretAuthReq.ProtoReflect.Descriptor instead.
func (*UserPaymentSecretAuthReq) Descriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{18}
}

func (x *UserPaymentSecretAuthReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserPaymentSecretAuthReq) GetPaymentSecret() string {
	if x != nil {
		return x.PaymentSecret
	}
	return ""
}

type UserPaymentSecretAuthResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
}

func (x *UserPaymentSecretAuthResp) Reset() {
	*x = UserPaymentSecretAuthResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_wallet_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPaymentSecretAuthResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPaymentSecretAuthResp) ProtoMessage() {}

func (x *UserPaymentSecretAuthResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_wallet_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPaymentSecretAuthResp.ProtoReflect.Descriptor instead.
func (*UserPaymentSecretAuthResp) Descriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{19}
}

func (x *UserPaymentSecretAuthResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

// 8. 银行卡充值到用户钱包
type ChargeAccountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     int32  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`        //用户id
	BankCardID string `protobuf:"bytes,2,opt,name=bankCardID,proto3" json:"bankCardID,omitempty"` //银行卡id
	Amount     int64  `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`        //充值金额 单位：分
}

func (x *ChargeAccountReq) Reset() {
	*x = ChargeAccountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_wallet_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChargeAccountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChargeAccountReq) ProtoMessage() {}

func (x *ChargeAccountReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_wallet_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChargeAccountReq.ProtoReflect.Descriptor instead.
func (*ChargeAccountReq) Descriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{20}
}

func (x *ChargeAccountReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ChargeAccountReq) GetBankCardID() string {
	if x != nil {
		return x.BankCardID
	}
	return ""
}

func (x *ChargeAccountReq) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type ChargeAccountResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount     int64       `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"` //充值后余额 单位：分
	CommonResp *CommonResp `protobuf:"bytes,2,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
}

func (x *ChargeAccountResp) Reset() {
	*x = ChargeAccountResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_wallet_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChargeAccountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChargeAccountResp) ProtoMessage() {}

func (x *ChargeAccountResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_wallet_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChargeAccountResp.ProtoReflect.Descriptor instead.
func (*ChargeAccountResp) Descriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{21}
}

func (x *ChargeAccountResp) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ChargeAccountResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

// 9. 用户钱包提现到银行卡
type DrawAccountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     int32  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`        //用户id
	BankCardID string `protobuf:"bytes,2,opt,name=bankCardID,proto3" json:"bankCardID,omitempty"` //银行卡id
	Amount     int64  `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`        //提现金额 单位：分
}

func (x *DrawAccountReq) Reset() {
	*x = DrawAccountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_wallet_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrawAccountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrawAccountReq) ProtoMessage() {}

func (x *DrawAccountReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_wallet_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrawAccountReq.ProtoReflect.Descriptor instead.
func (*DrawAccountReq) Descriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{22}
}

func (x *DrawAccountReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DrawAccountReq) GetBankCardID() string {
	if x != nil {
		return x.BankCardID
	}
	return ""
}

func (x *DrawAccountReq) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type DrawAccountResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount     int64       `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"` //提现后余额 单位：分
	CommonResp *CommonResp `protobuf:"bytes,2,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
}

func (x *DrawAccountResp) Reset() {
	*x = DrawAccountResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_wallet_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrawAccountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrawAccountResp) ProtoMessage() {}

func (x *DrawAccountResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_wallet_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrawAccountResp.ProtoReflect.Descriptor instead.
func (*DrawAccountResp) Descriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{23}
}

func (x *DrawAccountResp) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *DrawAccountResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

// 10. 发红包
type SendRedPacketReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId          int32  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`                   //用户id
	PacketType      int32  `protobuf:"varint,2,opt,name=PacketType,proto3" json:"PacketType,omitempty"`           //红包类型(1个人红包、2群红包)
	IsLucky         int32  `protobuf:"varint,3,opt,name=IsLucky,proto3" json:"IsLucky,omitempty"`                 //是否为拼手气红包
	IsExclusive     int32  `protobuf:"varint,4,opt,name=IsExclusive,proto3" json:"IsExclusive,omitempty"`         //是否为专属红包(0不是、1是)
	ExclusiveUserID int32  `protobuf:"varint,5,opt,name=ExclusiveUserID,proto3" json:"ExclusiveUserID,omitempty"` //专属红包接收者 和isExclusive
	PacketTitle     string `protobuf:"bytes,6,opt,name=PacketTitle,proto3" json:"PacketTitle,omitempty"`          //红包标题
	Amount          int64  `protobuf:"varint,7,opt,name=Amount,proto3" json:"Amount,omitempty"`                   //红包金额 单位：分
	Number          int32  `protobuf:"varint,8,opt,name=Number,proto3" json:"Number,omitempty"`                   //红包个数
	// 通过哪种方式发送红包
	SendType    int32  `protobuf:"varint,9,opt,name=SendType,proto3" json:"SendType,omitempty"`       //发送方式(1钱包余额、2银行卡)
	BankCardID  int64  `protobuf:"varint,10,opt,name=BankCardID,proto3" json:"BankCardID,omitempty"`  //银行卡id
	OperationID string `protobuf:"bytes,11,opt,name=operationID,proto3" json:"operationID,omitempty"` //链路跟踪id
}

func (x *SendRedPacketReq) Reset() {
	*x = SendRedPacketReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_wallet_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendRedPacketReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendRedPacketReq) ProtoMessage() {}

func (x *SendRedPacketReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_wallet_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendRedPacketReq.ProtoReflect.Descriptor instead.
func (*SendRedPacketReq) Descriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{24}
}

func (x *SendRedPacketReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SendRedPacketReq) GetPacketType() int32 {
	if x != nil {
		return x.PacketType
	}
	return 0
}

func (x *SendRedPacketReq) GetIsLucky() int32 {
	if x != nil {
		return x.IsLucky
	}
	return 0
}

func (x *SendRedPacketReq) GetIsExclusive() int32 {
	if x != nil {
		return x.IsExclusive
	}
	return 0
}

func (x *SendRedPacketReq) GetExclusiveUserID() int32 {
	if x != nil {
		return x.ExclusiveUserID
	}
	return 0
}

func (x *SendRedPacketReq) GetPacketTitle() string {
	if x != nil {
		return x.PacketTitle
	}
	return ""
}

func (x *SendRedPacketReq) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *SendRedPacketReq) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *SendRedPacketReq) GetSendType() int32 {
	if x != nil {
		return x.SendType
	}
	return 0
}

func (x *SendRedPacketReq) GetBankCardID() int64 {
	if x != nil {
		return x.BankCardID
	}
	return 0
}

func (x *SendRedPacketReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type SendRedPacketResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RedPacketID string      `protobuf:"bytes,1,opt,name=redPacketID,proto3" json:"redPacketID,omitempty"`
	CommonResp  *CommonResp `protobuf:"bytes,2,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
}

func (x *SendRedPacketResp) Reset() {
	*x = SendRedPacketResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_wallet_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendRedPacketResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendRedPacketResp) ProtoMessage() {}

func (x *SendRedPacketResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_wallet_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendRedPacketResp.ProtoReflect.Descriptor instead.
func (*SendRedPacketResp) Descriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{25}
}

func (x *SendRedPacketResp) GetRedPacketID() string {
	if x != nil {
		return x.RedPacketID
	}
	return ""
}

func (x *SendRedPacketResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

// 新红包通知结构体
type RedPackageNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId          int32  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`                   //用户id
	RedPacketID     int64  `protobuf:"varint,2,opt,name=RedPacketID,proto3" json:"RedPacketID,omitempty"`         //红包id
	SendTime        int64  `protobuf:"varint,3,opt,name=SendTime,proto3" json:"SendTime,omitempty"`               //红包发送时间
	PacketTitle     string `protobuf:"bytes,4,opt,name=PacketTitle,proto3" json:"PacketTitle,omitempty"`          //红包标题
	PacketType      int32  `protobuf:"varint,5,opt,name=PacketType,proto3" json:"PacketType,omitempty"`           //红包类型(1个人红包、2群红包)
	IsExclusive     int32  `protobuf:"varint,6,opt,name=IsExclusive,proto3" json:"IsExclusive,omitempty"`         //是否为专属红包(0不是、1是)
	ExclusiveUserID int64  `protobuf:"varint,7,opt,name=ExclusiveUserID,proto3" json:"ExclusiveUserID,omitempty"` //专属红包接收者 和isExclusive配合使用
}

func (x *RedPackageNotify) Reset() {
	*x = RedPackageNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_wallet_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedPackageNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedPackageNotify) ProtoMessage() {}

func (x *RedPackageNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_wallet_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedPackageNotify.ProtoReflect.Descriptor instead.
func (*RedPackageNotify) Descriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{26}
}

func (x *RedPackageNotify) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RedPackageNotify) GetRedPacketID() int64 {
	if x != nil {
		return x.RedPacketID
	}
	return 0
}

func (x *RedPackageNotify) GetSendTime() int64 {
	if x != nil {
		return x.SendTime
	}
	return 0
}

func (x *RedPackageNotify) GetPacketTitle() string {
	if x != nil {
		return x.PacketTitle
	}
	return ""
}

func (x *RedPackageNotify) GetPacketType() int32 {
	if x != nil {
		return x.PacketType
	}
	return 0
}

func (x *RedPackageNotify) GetIsExclusive() int32 {
	if x != nil {
		return x.IsExclusive
	}
	return 0
}

func (x *RedPackageNotify) GetExclusiveUserID() int64 {
	if x != nil {
		return x.ExclusiveUserID
	}
	return 0
}

// 红包被领取通知发送红包者 的结构体
type RedPackageClickedNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketID string `protobuf:"bytes,1,opt,name=PacketID,proto3" json:"PacketID,omitempty"` //红包id
	UserName string `protobuf:"bytes,2,opt,name=UserName,proto3" json:"UserName,omitempty"` //领取者id，同时通知发送者 和接收者，但是两者的消息展示不同
	Remark   string `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`     //备注
}

func (x *RedPackageClickedNotify) Reset() {
	*x = RedPackageClickedNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_wallet_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedPackageClickedNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedPackageClickedNotify) ProtoMessage() {}

func (x *RedPackageClickedNotify) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_wallet_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedPackageClickedNotify.ProtoReflect.Descriptor instead.
func (*RedPackageClickedNotify) Descriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{27}
}

func (x *RedPackageClickedNotify) GetPacketID() string {
	if x != nil {
		return x.PacketID
	}
	return ""
}

func (x *RedPackageClickedNotify) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *RedPackageClickedNotify) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

// 11. 抢红包
type ClickRedPacketReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      int64  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`          //用户id
	RedPacketID string `protobuf:"bytes,2,opt,name=redPacketID,proto3" json:"redPacketID,omitempty"` //红包id
	OperationID string `protobuf:"bytes,3,opt,name=operationID,proto3" json:"operationID,omitempty"` //链路跟踪id
}

func (x *ClickRedPacketReq) Reset() {
	*x = ClickRedPacketReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_wallet_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClickRedPacketReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClickRedPacketReq) ProtoMessage() {}

func (x *ClickRedPacketReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_wallet_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClickRedPacketReq.ProtoReflect.Descriptor instead.
func (*ClickRedPacketReq) Descriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{28}
}

func (x *ClickRedPacketReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ClickRedPacketReq) GetRedPacketID() string {
	if x != nil {
		return x.RedPacketID
	}
	return ""
}

func (x *ClickRedPacketReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type ClickRedPacketResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string      `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`           //用户id
	RedPacketID string      `protobuf:"bytes,2,opt,name=redPacketID,proto3" json:"redPacketID,omitempty"` //红包id
	Amount      string      `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`           //领取到的红包金额  单位：分
	IsReceive   int32       `protobuf:"varint,4,opt,name=isReceive,proto3" json:"isReceive,omitempty"`    //是否领取成功
	CommonResp  *CommonResp `protobuf:"bytes,5,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
}

func (x *ClickRedPacketResp) Reset() {
	*x = ClickRedPacketResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_wallet_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClickRedPacketResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClickRedPacketResp) ProtoMessage() {}

func (x *ClickRedPacketResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_wallet_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClickRedPacketResp.ProtoReflect.Descriptor instead.
func (*ClickRedPacketResp) Descriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{29}
}

func (x *ClickRedPacketResp) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ClickRedPacketResp) GetRedPacketID() string {
	if x != nil {
		return x.RedPacketID
	}
	return ""
}

func (x *ClickRedPacketResp) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *ClickRedPacketResp) GetIsReceive() int32 {
	if x != nil {
		return x.IsReceive
	}
	return 0
}

func (x *ClickRedPacketResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

// 12. 获取红包信息
type GetRedPacketInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      int32  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"` //用户id
	RedPacketID string `protobuf:"bytes,2,opt,name=redPacketID,proto3" json:"redPacketID,omitempty"`
}

func (x *GetRedPacketInfoReq) Reset() {
	*x = GetRedPacketInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_wallet_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRedPacketInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRedPacketInfoReq) ProtoMessage() {}

func (x *GetRedPacketInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_wallet_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRedPacketInfoReq.ProtoReflect.Descriptor instead.
func (*GetRedPacketInfoReq) Descriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{30}
}

func (x *GetRedPacketInfoReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetRedPacketInfoReq) GetRedPacketID() string {
	if x != nil {
		return x.RedPacketID
	}
	return ""
}

type GetRedPacketInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId             int32       `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`                              //用户id
	PacketType         int32       `protobuf:"varint,2,opt,name=packetType,proto3" json:"packetType,omitempty"`                      //红包类型(1个人红包、2群红包)
	IsLucky            int32       `protobuf:"varint,3,opt,name=is_lucky,json=isLucky,proto3" json:"is_lucky,omitempty"`             //是否为拼手气红包
	IsExclusive        int32       `protobuf:"varint,4,opt,name=is_exclusive,json=isExclusive,proto3" json:"is_exclusive,omitempty"` //是否为专属红包(0不是、1是)
	ExclusiveUserID    int32       `protobuf:"varint,5,opt,name=exclusiveUserID,proto3" json:"exclusiveUserID,omitempty"`            //专属红包接收者 和isExclusive配合使用
	PacketTitle        string      `protobuf:"bytes,6,opt,name=packet_title,json=packetTitle,proto3" json:"packet_title,omitempty"`  //红包标题
	Amount             float32     `protobuf:"fixed32,7,opt,name=amount,proto3" json:"amount,omitempty"`                             //红包金额
	Number             int32       `protobuf:"varint,8,opt,name=number,proto3" json:"number,omitempty"`                              //红包个数
	ExpireTime         string      `protobuf:"bytes,9,opt,name=expireTime,proto3" json:"expireTime,omitempty"`                       //红包过期时间
	IsReceiveCompleted float32     `protobuf:"fixed32,10,opt,name=isReceiveCompleted,proto3" json:"isReceiveCompleted,omitempty"`    //是否已领完
	CommonResp         *CommonResp `protobuf:"bytes,11,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
}

func (x *GetRedPacketInfoResp) Reset() {
	*x = GetRedPacketInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_wallet_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRedPacketInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRedPacketInfoResp) ProtoMessage() {}

func (x *GetRedPacketInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_wallet_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRedPacketInfoResp.ProtoReflect.Descriptor instead.
func (*GetRedPacketInfoResp) Descriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{31}
}

func (x *GetRedPacketInfoResp) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetRedPacketInfoResp) GetPacketType() int32 {
	if x != nil {
		return x.PacketType
	}
	return 0
}

func (x *GetRedPacketInfoResp) GetIsLucky() int32 {
	if x != nil {
		return x.IsLucky
	}
	return 0
}

func (x *GetRedPacketInfoResp) GetIsExclusive() int32 {
	if x != nil {
		return x.IsExclusive
	}
	return 0
}

func (x *GetRedPacketInfoResp) GetExclusiveUserID() int32 {
	if x != nil {
		return x.ExclusiveUserID
	}
	return 0
}

func (x *GetRedPacketInfoResp) GetPacketTitle() string {
	if x != nil {
		return x.PacketTitle
	}
	return ""
}

func (x *GetRedPacketInfoResp) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *GetRedPacketInfoResp) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *GetRedPacketInfoResp) GetExpireTime() string {
	if x != nil {
		return x.ExpireTime
	}
	return ""
}

func (x *GetRedPacketInfoResp) GetIsReceiveCompleted() float32 {
	if x != nil {
		return x.IsReceiveCompleted
	}
	return 0
}

func (x *GetRedPacketInfoResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

// 13. 红包领取明细
type RedPacketClickDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      int32  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"` //用户id
	RedPacketID string `protobuf:"bytes,2,opt,name=redPacketID,proto3" json:"redPacketID,omitempty"`
}

func (x *RedPacketClickDetailReq) Reset() {
	*x = RedPacketClickDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_wallet_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedPacketClickDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedPacketClickDetailReq) ProtoMessage() {}

func (x *RedPacketClickDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_wallet_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedPacketClickDetailReq.ProtoReflect.Descriptor instead.
func (*RedPacketClickDetailReq) Descriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{32}
}

func (x *RedPacketClickDetailReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RedPacketClickDetailReq) GetRedPacketID() string {
	if x != nil {
		return x.RedPacketID
	}
	return ""
}

type RedPacketClickDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      int32   `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`           //用户id
	Nickname    string  `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`        //领取人名称
	Avater      string  `protobuf:"bytes,3,opt,name=avater,proto3" json:"avater,omitempty"`            //领取人头像
	RedPacketID uint32  `protobuf:"varint,4,opt,name=redPacketID,proto3" json:"redPacketID,omitempty"` //红包id
	Amount      float32 `protobuf:"fixed32,5,opt,name=amount,proto3" json:"amount,omitempty"`          //红包金额
}

func (x *RedPacketClickDetail) Reset() {
	*x = RedPacketClickDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_wallet_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedPacketClickDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedPacketClickDetail) ProtoMessage() {}

func (x *RedPacketClickDetail) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_wallet_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedPacketClickDetail.ProtoReflect.Descriptor instead.
func (*RedPacketClickDetail) Descriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{33}
}

func (x *RedPacketClickDetail) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RedPacketClickDetail) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *RedPacketClickDetail) GetAvater() string {
	if x != nil {
		return x.Avater
	}
	return ""
}

func (x *RedPacketClickDetail) GetRedPacketID() uint32 {
	if x != nil {
		return x.RedPacketID
	}
	return 0
}

func (x *RedPacketClickDetail) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type RedPacketClickDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RedPacketClickDetail []*RedPacketClickDetail `protobuf:"bytes,1,rep,name=redPacketClickDetail,proto3" json:"redPacketClickDetail,omitempty"`
	CommonResp           *CommonResp             `protobuf:"bytes,2,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
}

func (x *RedPacketClickDetailResp) Reset() {
	*x = RedPacketClickDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_wallet_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedPacketClickDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedPacketClickDetailResp) ProtoMessage() {}

func (x *RedPacketClickDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_wallet_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedPacketClickDetailResp.ProtoReflect.Descriptor instead.
func (*RedPacketClickDetailResp) Descriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{34}
}

func (x *RedPacketClickDetailResp) GetRedPacketClickDetail() []*RedPacketClickDetail {
	if x != nil {
		return x.RedPacketClickDetail
	}
	return nil
}

func (x *RedPacketClickDetailResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type ListRedPacketRecordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int32  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"` //用户id
	Date   string `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *ListRedPacketRecordReq) Reset() {
	*x = ListRedPacketRecordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_wallet_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRedPacketRecordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRedPacketRecordReq) ProtoMessage() {}

func (x *ListRedPacketRecordReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_wallet_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRedPacketRecordReq.ProtoReflect.Descriptor instead.
func (*ListRedPacketRecordReq) Descriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{35}
}

func (x *ListRedPacketRecordReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ListRedPacketRecordReq) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type ListRedPacketRecordResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         int32       `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`                //领取人id
	Nickname       string      `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`             //领取人名称
	Avater         string      `protobuf:"bytes,3,opt,name=avater,proto3" json:"avater,omitempty"`                 //领取人头像
	RedPacketID    uint32      `protobuf:"varint,4,opt,name=redPacketID,proto3" json:"redPacketID,omitempty"`      //红包id
	RedPacketTitle string      `protobuf:"bytes,5,opt,name=redPacketTitle,proto3" json:"redPacketTitle,omitempty"` //红包标题
	Amount         float32     `protobuf:"fixed32,6,opt,name=amount,proto3" json:"amount,omitempty"`               //红包金额
	CommonResp     *CommonResp `protobuf:"bytes,7,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
}

func (x *ListRedPacketRecordResp) Reset() {
	*x = ListRedPacketRecordResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_wallet_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRedPacketRecordResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRedPacketRecordResp) ProtoMessage() {}

func (x *ListRedPacketRecordResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_wallet_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRedPacketRecordResp.ProtoReflect.Descriptor instead.
func (*ListRedPacketRecordResp) Descriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{36}
}

func (x *ListRedPacketRecordResp) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ListRedPacketRecordResp) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *ListRedPacketRecordResp) GetAvater() string {
	if x != nil {
		return x.Avater
	}
	return ""
}

func (x *ListRedPacketRecordResp) GetRedPacketID() uint32 {
	if x != nil {
		return x.RedPacketID
	}
	return 0
}

func (x *ListRedPacketRecordResp) GetRedPacketTitle() string {
	if x != nil {
		return x.RedPacketTitle
	}
	return ""
}

func (x *ListRedPacketRecordResp) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ListRedPacketRecordResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

// 15. 确认发送红包的code
type ConfirmSendRedPacketCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      int32  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"` //用户id
	RedPacketID string `protobuf:"bytes,2,opt,name=redPacketID,proto3" json:"redPacketID,omitempty"`
	Code        string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *ConfirmSendRedPacketCodeReq) Reset() {
	*x = ConfirmSendRedPacketCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_wallet_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmSendRedPacketCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmSendRedPacketCodeReq) ProtoMessage() {}

func (x *ConfirmSendRedPacketCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_wallet_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmSendRedPacketCodeReq.ProtoReflect.Descriptor instead.
func (*ConfirmSendRedPacketCodeReq) Descriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{37}
}

func (x *ConfirmSendRedPacketCodeReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ConfirmSendRedPacketCodeReq) GetRedPacketID() string {
	if x != nil {
		return x.RedPacketID
	}
	return ""
}

func (x *ConfirmSendRedPacketCodeReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type ConfirmSendRedPacketCodeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
}

func (x *ConfirmSendRedPacketCodeResp) Reset() {
	*x = ConfirmSendRedPacketCodeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_wallet_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmSendRedPacketCodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmSendRedPacketCodeResp) ProtoMessage() {}

func (x *ConfirmSendRedPacketCodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_wallet_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmSendRedPacketCodeResp.ProtoReflect.Descriptor instead.
func (*ConfirmSendRedPacketCodeResp) Descriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{38}
}

func (x *ConfirmSendRedPacketCodeResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

// ==============================================回调 ===================
// 16. 用户从银行卡充值到红包、充值到主账户都需要进行回调
type ChargeNotifyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     int32  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"` //用户id
	BankCardID string `protobuf:"bytes,2,opt,name=bankCardID,proto3" json:"bankCardID,omitempty"`
	Amount     string `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *ChargeNotifyReq) Reset() {
	*x = ChargeNotifyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_wallet_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChargeNotifyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChargeNotifyReq) ProtoMessage() {}

func (x *ChargeNotifyReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_wallet_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChargeNotifyReq.ProtoReflect.Descriptor instead.
func (*ChargeNotifyReq) Descriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{39}
}

func (x *ChargeNotifyReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ChargeNotifyReq) GetBankCardID() string {
	if x != nil {
		return x.BankCardID
	}
	return ""
}

func (x *ChargeNotifyReq) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type ChargeNotifyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
}

func (x *ChargeNotifyResp) Reset() {
	*x = ChargeNotifyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_wallet_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChargeNotifyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChargeNotifyResp) ProtoMessage() {}

func (x *ChargeNotifyResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_wallet_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChargeNotifyResp.ProtoReflect.Descriptor instead.
func (*ChargeNotifyResp) Descriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{40}
}

func (x *ChargeNotifyResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

// 17. 提现的回调接口： 提供给第三方
type DrawNotifyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderNo          string  `protobuf:"bytes,1,opt,name=order_no,json=orderNo,proto3" json:"order_no,omitempty"`                              //平台订单号
	ThirdOrderNo     string  `protobuf:"bytes,2,opt,name=third_order_no,json=thirdOrderNo,proto3" json:"third_order_no,omitempty"`             //第三方订单号
	BankCardNumber   string  `protobuf:"bytes,3,opt,name=bank_card_number,json=bankCardNumber,proto3" json:"bank_card_number,omitempty"`       //银行卡号
	WithdrawalAmount float32 `protobuf:"fixed32,4,opt,name=withdrawal_amount,json=withdrawalAmount,proto3" json:"withdrawal_amount,omitempty"` //提现金额
	CardOwner        string  `protobuf:"bytes,5,opt,name=card_owner,json=cardOwner,proto3" json:"card_owner,omitempty"`                        //持卡者
}

func (x *DrawNotifyReq) Reset() {
	*x = DrawNotifyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_wallet_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrawNotifyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrawNotifyReq) ProtoMessage() {}

func (x *DrawNotifyReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_wallet_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrawNotifyReq.ProtoReflect.Descriptor instead.
func (*DrawNotifyReq) Descriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{41}
}

func (x *DrawNotifyReq) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *DrawNotifyReq) GetThirdOrderNo() string {
	if x != nil {
		return x.ThirdOrderNo
	}
	return ""
}

func (x *DrawNotifyReq) GetBankCardNumber() string {
	if x != nil {
		return x.BankCardNumber
	}
	return ""
}

func (x *DrawNotifyReq) GetWithdrawalAmount() float32 {
	if x != nil {
		return x.WithdrawalAmount
	}
	return 0
}

func (x *DrawNotifyReq) GetCardOwner() string {
	if x != nil {
		return x.CardOwner
	}
	return ""
}

type DrawNotifyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
}

func (x *DrawNotifyResp) Reset() {
	*x = DrawNotifyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_wallet_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrawNotifyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrawNotifyResp) ProtoMessage() {}

func (x *DrawNotifyResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_wallet_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrawNotifyResp.ProtoReflect.Descriptor instead.
func (*DrawNotifyResp) Descriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{42}
}

func (x *DrawNotifyResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

// 身份证实名认证
type IdCardRealNameAuthReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      int32  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`                    //用户id
	Mobile      string `protobuf:"bytes,2,opt,name=mobile,proto3" json:"mobile,omitempty"`                     //手机号码
	IdCard      string `protobuf:"bytes,3,opt,name=id_card,json=idCard,proto3" json:"id_card,omitempty"`       //身份证
	RealName    string `protobuf:"bytes,4,opt,name=real_name,json=realName,proto3" json:"real_name,omitempty"` //真实姓名
	OperationID string `protobuf:"bytes,5,opt,name=operationID,proto3" json:"operationID,omitempty"`           //链路跟踪id
}

func (x *IdCardRealNameAuthReq) Reset() {
	*x = IdCardRealNameAuthReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_wallet_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdCardRealNameAuthReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdCardRealNameAuthReq) ProtoMessage() {}

func (x *IdCardRealNameAuthReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_wallet_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdCardRealNameAuthReq.ProtoReflect.Descriptor instead.
func (*IdCardRealNameAuthReq) Descriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{43}
}

func (x *IdCardRealNameAuthReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *IdCardRealNameAuthReq) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *IdCardRealNameAuthReq) GetIdCard() string {
	if x != nil {
		return x.IdCard
	}
	return ""
}

func (x *IdCardRealNameAuthReq) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *IdCardRealNameAuthReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type IdCardRealNameAuthResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Step       uint32      `protobuf:"varint,1,opt,name=step,proto3" json:"step,omitempty"` //步骤
	CommonResp *CommonResp `protobuf:"bytes,2,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
}

func (x *IdCardRealNameAuthResp) Reset() {
	*x = IdCardRealNameAuthResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_wallet_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdCardRealNameAuthResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdCardRealNameAuthResp) ProtoMessage() {}

func (x *IdCardRealNameAuthResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_wallet_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdCardRealNameAuthResp.ProtoReflect.Descriptor instead.
func (*IdCardRealNameAuthResp) Descriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{44}
}

func (x *IdCardRealNameAuthResp) GetStep() uint32 {
	if x != nil {
		return x.Step
	}
	return 0
}

func (x *IdCardRealNameAuthResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type AuthPaymentSecretReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        int32  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`                                   //用户id
	PaymentSecret string `protobuf:"bytes,2,opt,name=payment_secret,json=paymentSecret,proto3" json:"payment_secret,omitempty"` //支付密码
}

func (x *AuthPaymentSecretReq) Reset() {
	*x = AuthPaymentSecretReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_wallet_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthPaymentSecretReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthPaymentSecretReq) ProtoMessage() {}

func (x *AuthPaymentSecretReq) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_wallet_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthPaymentSecretReq.ProtoReflect.Descriptor instead.
func (*AuthPaymentSecretReq) Descriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{45}
}

func (x *AuthPaymentSecretReq) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AuthPaymentSecretReq) GetPaymentSecret() string {
	if x != nil {
		return x.PaymentSecret
	}
	return ""
}

type AuthPaymentSecretResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Step       uint32      `protobuf:"varint,1,opt,name=step,proto3" json:"step,omitempty"` //步骤
	CommonResp *CommonResp `protobuf:"bytes,2,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
}

func (x *AuthPaymentSecretResp) Reset() {
	*x = AuthPaymentSecretResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_wallet_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthPaymentSecretResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthPaymentSecretResp) ProtoMessage() {}

func (x *AuthPaymentSecretResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_wallet_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthPaymentSecretResp.ProtoReflect.Descriptor instead.
func (*AuthPaymentSecretResp) Descriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{46}
}

func (x *AuthPaymentSecretResp) GetStep() uint32 {
	if x != nil {
		return x.Step
	}
	return 0
}

func (x *AuthPaymentSecretResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

// 用户的充值接口
type UserQuiky struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      int32  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`          //用户id
	BankCardID  string `protobuf:"bytes,2,opt,name=bankCardID,proto3" json:"bankCardID,omitempty"`   //银行卡id
	Amount      string `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`           //充值金额
	OperationID string `protobuf:"bytes,4,opt,name=operationID,proto3" json:"operationID,omitempty"` //链路跟踪id
}

func (x *UserQuiky) Reset() {
	*x = UserQuiky{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_wallet_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserQuiky) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserQuiky) ProtoMessage() {}

func (x *UserQuiky) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_wallet_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserQuiky.ProtoReflect.Descriptor instead.
func (*UserQuiky) Descriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{47}
}

func (x *UserQuiky) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserQuiky) GetBankCardID() string {
	if x != nil {
		return x.BankCardID
	}
	return ""
}

func (x *UserQuiky) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *UserQuiky) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type UserRechargeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderNo    string      `protobuf:"bytes,1,opt,name=orderNo,proto3" json:"orderNo,omitempty"` //订单号
	CommonResp *CommonResp `protobuf:"bytes,2,opt,name=commonResp,proto3" json:"commonResp,omitempty"`
}

func (x *UserRechargeResp) Reset() {
	*x = UserRechargeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cloud_wallet_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRechargeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRechargeResp) ProtoMessage() {}

func (x *UserRechargeResp) ProtoReflect() protoreflect.Message {
	mi := &file_cloud_wallet_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRechargeResp.ProtoReflect.Descriptor instead.
func (*UserRechargeResp) Descriptor() ([]byte, []int) {
	return file_cloud_wallet_proto_rawDescGZIP(), []int{48}
}

func (x *UserRechargeResp) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *UserRechargeResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

var File_cloud_wallet_proto protoreflect.FileDescriptor

var file_cloud_wallet_proto_rawDesc = []byte{
	0x0a, 0x12, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x22, 0x60, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x3a, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x20, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x45, 0x72, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72,
	0x72, 0x4d, 0x73, 0x67, 0x22, 0x50, 0x0a, 0x14, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0xcc, 0x02, 0x0a, 0x15, 0x55, 0x73, 0x65, 0x72, 0x4e,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x73, 0x74, 0x65, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x64, 0x43, 0x61, 0x72, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x64, 0x43, 0x61, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x62, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x62, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10,
	0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x0d, 0x62, 0x69, 0x6e, 0x64,
	0x43, 0x61, 0x72, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x42,
	0x69, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0d, 0x62, 0x69,
	0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x0a, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x67, 0x0a, 0x0d, 0x42, 0x69, 0x6e, 0x64, 0x43, 0x61, 0x72,
	0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x64, 0x43, 0x61, 0x72,
	0x64, 0x41, 0x67, 0x72, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e,
	0x64, 0x43, 0x61, 0x72, 0x64, 0x41, 0x67, 0x72, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61,
	0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61,
	0x6e, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x6f, 0x22, 0x9e,
	0x01, 0x0a, 0x18, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e,
	0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75,
	0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22,
	0x83, 0x01, 0x0a, 0x19, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x38, 0x0a, 0x0a, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xac, 0x01, 0x0a, 0x0a, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x66, 0x74, 0x65,
	0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x61,
	0x66, 0x74, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x22, 0x52, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x61, 0x6e, 0x6b, 0x63, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x59, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x6b, 0x63, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x3e, 0x0a, 0x0c, 0x62, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0c, 0x62, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0xba, 0x01, 0x0a, 0x0c, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x61, 0x6e, 0x6b, 0x43, 0x61,
	0x72, 0x64, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x4f, 0x77, 0x6e, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x72, 0x64, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x62, 0x61, 0x6e, 0x6b, 0x43, 0x61,
	0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x62, 0x61, 0x6e, 0x6b, 0x43, 0x61,
	0x72, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x62, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20,
	0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0xd1, 0x01, 0x0a, 0x13, 0x42, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x6e,
	0x6b, 0x63, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x72, 0x64, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x22,
	0x0a, 0x0c, 0x62, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x62, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x62, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x61, 0x6e, 0x6b,
	0x43, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x22, 0x90, 0x01, 0x0a, 0x14, 0x42, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x42, 0x61, 0x6e, 0x6b, 0x63, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a,
	0x0a, 0x62, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x62, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x6d, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x38, 0x0a,
	0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0xb0, 0x01, 0x0a, 0x1a, 0x42, 0x69, 0x6e, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x6b, 0x63, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x62, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x62, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x6d, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x73, 0x6d, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x77, 0x0a, 0x1b, 0x42, 0x69,
	0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x6b, 0x63, 0x61, 0x72, 0x64, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x61, 0x6e,
	0x6b, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62,
	0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x0a, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x52, 0x0a, 0x18, 0x55, 0x6e, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x6b, 0x63, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x61, 0x6e, 0x6b, 0x43,
	0x61, 0x72, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x61, 0x6e,
	0x6b, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x19, 0x55, 0x6e, 0x42, 0x69, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x6b, 0x63, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x75,
	0x0a, 0x13, 0x53, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a,
	0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x50, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38, 0x0a,
	0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x58, 0x0a, 0x18, 0x75, 0x73, 0x65, 0x72, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x22, 0x55, 0x0a, 0x19, 0x75, 0x73, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38,
	0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x62, 0x0a, 0x10, 0x63, 0x68, 0x61, 0x72,
	0x67, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x61, 0x6e, 0x6b, 0x43, 0x61,
	0x72, 0x64, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x65, 0x0a, 0x11,
	0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x0a, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x60, 0x0a, 0x0e, 0x64, 0x72, 0x61, 0x77, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x62, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x62, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x49, 0x44, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x63, 0x0a, 0x0f, 0x64, 0x72, 0x61, 0x77, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x38, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0xe0, 0x02, 0x0a, 0x10, 0x53,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x73, 0x4c, 0x75, 0x63,
	0x6b, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x49, 0x73, 0x4c, 0x75, 0x63, 0x6b,
	0x79, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x73, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x49, 0x73, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x73,
	0x69, 0x76, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x45, 0x78,
	0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a,
	0x0b, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x42,
	0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x42, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x6f, 0x0a,
	0x11, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x49, 0x44, 0x12, 0x38, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0xf6,
	0x01, 0x0a, 0x10, 0x52, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x52,
	0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x52, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x49,
	0x73, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x49, 0x73, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x12, 0x28, 0x0a,
	0x0f, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x69, 0x0a, 0x17, 0x52, 0x65, 0x64, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x44, 0x12, 0x1a,
	0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x22, 0x6f, 0x0a, 0x11, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x64, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x72, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49,
	0x44, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x22, 0xbe, 0x01, 0x0a, 0x12, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x64,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x69, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x69, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x12, 0x38, 0x0a, 0x0a, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x4f, 0x0a, 0x13, 0x67, 0x65, 0x74, 0x52, 0x65, 0x64, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x49, 0x44, 0x22, 0x93, 0x03, 0x0a, 0x14, 0x67, 0x65, 0x74, 0x52, 0x65, 0x64,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x6c, 0x75, 0x63,
	0x6b, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x73, 0x4c, 0x75, 0x63, 0x6b,
	0x79, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x69, 0x73, 0x45, 0x78, 0x63, 0x6c, 0x75,
	0x73, 0x69, 0x76, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x65,
	0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x2e, 0x0a, 0x12, 0x69, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x12, 0x69,
	0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x12, 0x38, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x53, 0x0a, 0x17, 0x72,
	0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x72, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x44,
	0x22, 0x9c, 0x01, 0x0a, 0x14, 0x72, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6c,
	0x69, 0x63, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x76, 0x61, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0xac, 0x01, 0x0a, 0x18, 0x72, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6c, 0x69,
	0x63, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x56, 0x0a, 0x14,
	0x72, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x72, 0x65, 0x64, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x14,
	0x72, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x38, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x44,
	0x0a, 0x16, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x65, 0x22, 0x81, 0x02, 0x0a, 0x17, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x64,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b,
	0x72, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x44, 0x12, 0x26,
	0x0a, 0x0e, 0x72, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x38,
	0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x6b, 0x0a, 0x1b, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x72, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49,
	0x44, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x58, 0x0a, 0x1c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x61, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52,
	0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x61,
	0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x62, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x4c, 0x0a, 0x10, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x22, 0xc6, 0x01, 0x0a, 0x0d, 0x64, 0x72, 0x61, 0x77, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52,
	0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x24, 0x0a,
	0x0e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x68, 0x69, 0x72, 0x64, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x4e, 0x6f, 0x12, 0x28, 0x0a, 0x10, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62,
	0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2b, 0x0a,
	0x11, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61,
	0x72, 0x64, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x61, 0x72, 0x64, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x22, 0x4a, 0x0a, 0x0e, 0x64, 0x72, 0x61,
	0x77, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x0a, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x9f, 0x01, 0x0a, 0x15, 0x49, 0x64, 0x43, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x64, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x69, 0x64, 0x43, 0x61, 0x72, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x6c,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x61,
	0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x66, 0x0a, 0x16, 0x49, 0x64, 0x43, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x38, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x55, 0x0a, 0x14, 0x61, 0x75, 0x74, 0x68, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x25, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x65, 0x0a, 0x15, 0x61, 0x75, 0x74, 0x68, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73,
	0x74, 0x65, 0x70, 0x12, 0x38, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x7d, 0x0a,
	0x09, 0x55, 0x73, 0x65, 0x72, 0x51, 0x75, 0x69, 0x6b, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x61, 0x6e, 0x6b, 0x43, 0x61, 0x72, 0x64,
	0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x66, 0x0a, 0x10,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x38, 0x0a, 0x0a, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x2a, 0xbb, 0x01, 0x0a, 0x12, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x45,
	0x53, 0x43, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x10, 0x8f, 0x4e, 0x12, 0x19, 0x0a, 0x14, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x10, 0xe8,
	0x07, 0x12, 0x19, 0x0a, 0x14, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x49, 0x73, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x10, 0xe9, 0x07, 0x12, 0x19, 0x0a, 0x14,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x73, 0x45, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x10, 0xea, 0x07, 0x12, 0x1c, 0x0a, 0x17, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x73, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69,
	0x76, 0x65, 0x10, 0xeb, 0x07, 0x12, 0x1b, 0x0a, 0x16, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x10,
	0xec, 0x07, 0x32, 0xd8, 0x07, 0x0a, 0x12, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5c, 0x0a, 0x11, 0x55, 0x73, 0x65,
	0x72, 0x4e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x4e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x23, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5f, 0x0a, 0x12, 0x49, 0x64, 0x43, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x41, 0x75, 0x74, 0x68, 0x12, 0x23, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x49, 0x64, 0x43,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52,
	0x65, 0x71, 0x1a, 0x24, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x2e, 0x49, 0x64, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x59, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x21, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x22, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x53,
	0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x68, 0x0a, 0x15, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x62, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x6b, 0x63, 0x61, 0x72, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x6b, 0x63,
	0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x42, 0x61, 0x6e, 0x6b, 0x63, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x59, 0x0a, 0x10, 0x42, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x6e,
	0x6b, 0x63, 0x61, 0x72, 0x64, 0x12, 0x21, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x6e,
	0x6b, 0x63, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x42, 0x61, 0x6e, 0x6b, 0x63, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6e, 0x0a, 0x17,
	0x42, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x6b, 0x63, 0x61, 0x72, 0x64,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12, 0x28, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x61, 0x6e, 0x6b, 0x63, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65,
	0x71, 0x1a, 0x29, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x2e, 0x42, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x6b, 0x63, 0x61, 0x72,
	0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x68, 0x0a, 0x15,
	0x55, 0x6e, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x6e,
	0x6b, 0x63, 0x61, 0x72, 0x64, 0x12, 0x26, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x55, 0x6e, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x55, 0x73,
	0x65, 0x72, 0x42, 0x61, 0x6e, 0x6b, 0x63, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x55, 0x6e, 0x42,
	0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x6b, 0x63, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1e, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x64, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x64, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x0e, 0x43, 0x6c, 0x69, 0x63,
	0x6b, 0x52, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1f, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x52,
	0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x43, 0x6c, 0x69, 0x63, 0x6b,
	0x52, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x42, 0x10, 0x5a,
	0x0e, 0x2e, 0x3b, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cloud_wallet_proto_rawDescOnce sync.Once
	file_cloud_wallet_proto_rawDescData = file_cloud_wallet_proto_rawDesc
)

func file_cloud_wallet_proto_rawDescGZIP() []byte {
	file_cloud_wallet_proto_rawDescOnce.Do(func() {
		file_cloud_wallet_proto_rawDescData = protoimpl.X.CompressGZIP(file_cloud_wallet_proto_rawDescData)
	})
	return file_cloud_wallet_proto_rawDescData
}

var file_cloud_wallet_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_cloud_wallet_proto_msgTypes = make([]protoimpl.MessageInfo, 49)
var file_cloud_wallet_proto_goTypes = []interface{}{
	(CloudWalletErrCode)(0),              // 0: cloud_wallet.CloudWalletErrCode
	(*CommonResp)(nil),                   // 1: cloud_wallet.CommonResp
	(*UserNcountAccountReq)(nil),         // 2: cloud_wallet.UserNcountAccountReq
	(*UserNcountAccountResp)(nil),        // 3: cloud_wallet.UserNcountAccountResp
	(*BindCardsList)(nil),                // 4: cloud_wallet.BindCardsList
	(*CloudWalletRecordListReq)(nil),     // 5: cloud_wallet.CloudWalletRecordListReq
	(*CloudWalletRecordListResp)(nil),    // 6: cloud_wallet.CloudWalletRecordListResp
	(*RecordList)(nil),                   // 7: cloud_wallet.RecordList
	(*GetUserBankcardListReq)(nil),       // 8: cloud_wallet.GetUserBankcardListReq
	(*GetUserBankcardListResp)(nil),      // 9: cloud_wallet.GetUserBankcardListResp
	(*BankCardList)(nil),                 // 10: cloud_wallet.BankCardList
	(*BindUserBankcardReq)(nil),          // 11: cloud_wallet.BindUserBankcardReq
	(*BindUserBankcardResp)(nil),         // 12: cloud_wallet.BindUserBankcardResp
	(*BindUserBankcardConfirmReq)(nil),   // 13: cloud_wallet.BindUserBankcardConfirmReq
	(*BindUserBankcardConfirmResp)(nil),  // 14: cloud_wallet.BindUserBankcardConfirmResp
	(*UnBindingUserBankcardReq)(nil),     // 15: cloud_wallet.UnBindingUserBankcardReq
	(*UnBindingUserBankcardResp)(nil),    // 16: cloud_wallet.UnBindingUserBankcardResp
	(*SetPaymentSecretReq)(nil),          // 17: cloud_wallet.SetPaymentSecretReq
	(*SetPaymentSecretResp)(nil),         // 18: cloud_wallet.SetPaymentSecretResp
	(*UserPaymentSecretAuthReq)(nil),     // 19: cloud_wallet.userPaymentSecretAuthReq
	(*UserPaymentSecretAuthResp)(nil),    // 20: cloud_wallet.userPaymentSecretAuthResp
	(*ChargeAccountReq)(nil),             // 21: cloud_wallet.chargeAccountReq
	(*ChargeAccountResp)(nil),            // 22: cloud_wallet.chargeAccountResp
	(*DrawAccountReq)(nil),               // 23: cloud_wallet.drawAccountReq
	(*DrawAccountResp)(nil),              // 24: cloud_wallet.drawAccountResp
	(*SendRedPacketReq)(nil),             // 25: cloud_wallet.SendRedPacketReq
	(*SendRedPacketResp)(nil),            // 26: cloud_wallet.SendRedPacketResp
	(*RedPackageNotify)(nil),             // 27: cloud_wallet.RedPackageNotify
	(*RedPackageClickedNotify)(nil),      // 28: cloud_wallet.RedPackageClickedNotify
	(*ClickRedPacketReq)(nil),            // 29: cloud_wallet.ClickRedPacketReq
	(*ClickRedPacketResp)(nil),           // 30: cloud_wallet.ClickRedPacketResp
	(*GetRedPacketInfoReq)(nil),          // 31: cloud_wallet.getRedPacketInfoReq
	(*GetRedPacketInfoResp)(nil),         // 32: cloud_wallet.getRedPacketInfoResp
	(*RedPacketClickDetailReq)(nil),      // 33: cloud_wallet.redPacketClickDetailReq
	(*RedPacketClickDetail)(nil),         // 34: cloud_wallet.redPacketClickDetail
	(*RedPacketClickDetailResp)(nil),     // 35: cloud_wallet.redPacketClickDetailResp
	(*ListRedPacketRecordReq)(nil),       // 36: cloud_wallet.listRedPacketRecordReq
	(*ListRedPacketRecordResp)(nil),      // 37: cloud_wallet.listRedPacketRecordResp
	(*ConfirmSendRedPacketCodeReq)(nil),  // 38: cloud_wallet.confirmSendRedPacketCodeReq
	(*ConfirmSendRedPacketCodeResp)(nil), // 39: cloud_wallet.confirmSendRedPacketCodeResp
	(*ChargeNotifyReq)(nil),              // 40: cloud_wallet.chargeNotifyReq
	(*ChargeNotifyResp)(nil),             // 41: cloud_wallet.chargeNotifyResp
	(*DrawNotifyReq)(nil),                // 42: cloud_wallet.drawNotifyReq
	(*DrawNotifyResp)(nil),               // 43: cloud_wallet.drawNotifyResp
	(*IdCardRealNameAuthReq)(nil),        // 44: cloud_wallet.IdCardRealNameAuthReq
	(*IdCardRealNameAuthResp)(nil),       // 45: cloud_wallet.IdCardRealNameAuthResp
	(*AuthPaymentSecretReq)(nil),         // 46: cloud_wallet.authPaymentSecretReq
	(*AuthPaymentSecretResp)(nil),        // 47: cloud_wallet.authPaymentSecretResp
	(*UserQuiky)(nil),                    // 48: cloud_wallet.UserQuiky
	(*UserRechargeResp)(nil),             // 49: cloud_wallet.UserRechargeResp
}
var file_cloud_wallet_proto_depIdxs = []int32{
	0,  // 0: cloud_wallet.CommonResp.errCode:type_name -> cloud_wallet.CloudWalletErrCode
	4,  // 1: cloud_wallet.UserNcountAccountResp.bindCardsList:type_name -> cloud_wallet.BindCardsList
	1,  // 2: cloud_wallet.UserNcountAccountResp.commonResp:type_name -> cloud_wallet.CommonResp
	7,  // 3: cloud_wallet.CloudWalletRecordListResp.recordList:type_name -> cloud_wallet.RecordList
	10, // 4: cloud_wallet.GetUserBankcardListResp.bankCardList:type_name -> cloud_wallet.BankCardList
	1,  // 5: cloud_wallet.BindUserBankcardResp.commonResp:type_name -> cloud_wallet.CommonResp
	1,  // 6: cloud_wallet.BindUserBankcardConfirmResp.commonResp:type_name -> cloud_wallet.CommonResp
	1,  // 7: cloud_wallet.UnBindingUserBankcardResp.commonResp:type_name -> cloud_wallet.CommonResp
	1,  // 8: cloud_wallet.SetPaymentSecretResp.commonResp:type_name -> cloud_wallet.CommonResp
	1,  // 9: cloud_wallet.userPaymentSecretAuthResp.commonResp:type_name -> cloud_wallet.CommonResp
	1,  // 10: cloud_wallet.chargeAccountResp.commonResp:type_name -> cloud_wallet.CommonResp
	1,  // 11: cloud_wallet.drawAccountResp.commonResp:type_name -> cloud_wallet.CommonResp
	1,  // 12: cloud_wallet.SendRedPacketResp.commonResp:type_name -> cloud_wallet.CommonResp
	1,  // 13: cloud_wallet.ClickRedPacketResp.commonResp:type_name -> cloud_wallet.CommonResp
	1,  // 14: cloud_wallet.getRedPacketInfoResp.commonResp:type_name -> cloud_wallet.CommonResp
	34, // 15: cloud_wallet.redPacketClickDetailResp.redPacketClickDetail:type_name -> cloud_wallet.redPacketClickDetail
	1,  // 16: cloud_wallet.redPacketClickDetailResp.commonResp:type_name -> cloud_wallet.CommonResp
	1,  // 17: cloud_wallet.listRedPacketRecordResp.commonResp:type_name -> cloud_wallet.CommonResp
	1,  // 18: cloud_wallet.confirmSendRedPacketCodeResp.commonResp:type_name -> cloud_wallet.CommonResp
	1,  // 19: cloud_wallet.chargeNotifyResp.commonResp:type_name -> cloud_wallet.CommonResp
	1,  // 20: cloud_wallet.drawNotifyResp.commonResp:type_name -> cloud_wallet.CommonResp
	1,  // 21: cloud_wallet.IdCardRealNameAuthResp.commonResp:type_name -> cloud_wallet.CommonResp
	1,  // 22: cloud_wallet.authPaymentSecretResp.commonResp:type_name -> cloud_wallet.CommonResp
	1,  // 23: cloud_wallet.UserRechargeResp.commonResp:type_name -> cloud_wallet.CommonResp
	2,  // 24: cloud_wallet.CloudWalletService.UserNcountAccount:input_type -> cloud_wallet.UserNcountAccountReq
	44, // 25: cloud_wallet.CloudWalletService.IdCardRealNameAuth:input_type -> cloud_wallet.IdCardRealNameAuthReq
	17, // 26: cloud_wallet.CloudWalletService.SetPaymentSecret:input_type -> cloud_wallet.SetPaymentSecretReq
	5,  // 27: cloud_wallet.CloudWalletService.CloudWalletRecordList:input_type -> cloud_wallet.CloudWalletRecordListReq
	8,  // 28: cloud_wallet.CloudWalletService.GetUserBankcardList:input_type -> cloud_wallet.GetUserBankcardListReq
	11, // 29: cloud_wallet.CloudWalletService.BindUserBankcard:input_type -> cloud_wallet.BindUserBankcardReq
	13, // 30: cloud_wallet.CloudWalletService.BindUserBankcardConfirm:input_type -> cloud_wallet.BindUserBankcardConfirmReq
	15, // 31: cloud_wallet.CloudWalletService.UnBindingUserBankcard:input_type -> cloud_wallet.UnBindingUserBankcardReq
	25, // 32: cloud_wallet.CloudWalletService.SendRedPacket:input_type -> cloud_wallet.SendRedPacketReq
	29, // 33: cloud_wallet.CloudWalletService.ClickRedPacket:input_type -> cloud_wallet.ClickRedPacketReq
	3,  // 34: cloud_wallet.CloudWalletService.UserNcountAccount:output_type -> cloud_wallet.UserNcountAccountResp
	45, // 35: cloud_wallet.CloudWalletService.IdCardRealNameAuth:output_type -> cloud_wallet.IdCardRealNameAuthResp
	18, // 36: cloud_wallet.CloudWalletService.SetPaymentSecret:output_type -> cloud_wallet.SetPaymentSecretResp
	6,  // 37: cloud_wallet.CloudWalletService.CloudWalletRecordList:output_type -> cloud_wallet.CloudWalletRecordListResp
	9,  // 38: cloud_wallet.CloudWalletService.GetUserBankcardList:output_type -> cloud_wallet.GetUserBankcardListResp
	12, // 39: cloud_wallet.CloudWalletService.BindUserBankcard:output_type -> cloud_wallet.BindUserBankcardResp
	14, // 40: cloud_wallet.CloudWalletService.BindUserBankcardConfirm:output_type -> cloud_wallet.BindUserBankcardConfirmResp
	16, // 41: cloud_wallet.CloudWalletService.UnBindingUserBankcard:output_type -> cloud_wallet.UnBindingUserBankcardResp
	26, // 42: cloud_wallet.CloudWalletService.SendRedPacket:output_type -> cloud_wallet.SendRedPacketResp
	30, // 43: cloud_wallet.CloudWalletService.ClickRedPacket:output_type -> cloud_wallet.ClickRedPacketResp
	34, // [34:44] is the sub-list for method output_type
	24, // [24:34] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_cloud_wallet_proto_init() }
func file_cloud_wallet_proto_init() {
	if File_cloud_wallet_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cloud_wallet_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_wallet_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserNcountAccountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_wallet_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserNcountAccountResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_wallet_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindCardsList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_wallet_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloudWalletRecordListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_wallet_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloudWalletRecordListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_wallet_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_wallet_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserBankcardListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_wallet_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserBankcardListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_wallet_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BankCardList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_wallet_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindUserBankcardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_wallet_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindUserBankcardResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_wallet_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindUserBankcardConfirmReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_wallet_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindUserBankcardConfirmResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_wallet_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnBindingUserBankcardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_wallet_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnBindingUserBankcardResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_wallet_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPaymentSecretReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_wallet_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPaymentSecretResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_wallet_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPaymentSecretAuthReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_wallet_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPaymentSecretAuthResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_wallet_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChargeAccountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_wallet_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChargeAccountResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_wallet_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrawAccountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_wallet_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrawAccountResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_wallet_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendRedPacketReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_wallet_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendRedPacketResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_wallet_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedPackageNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_wallet_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedPackageClickedNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_wallet_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClickRedPacketReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_wallet_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClickRedPacketResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_wallet_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRedPacketInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_wallet_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRedPacketInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_wallet_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedPacketClickDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_wallet_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedPacketClickDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_wallet_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedPacketClickDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_wallet_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRedPacketRecordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_wallet_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRedPacketRecordResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_wallet_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmSendRedPacketCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_wallet_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmSendRedPacketCodeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_wallet_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChargeNotifyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_wallet_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChargeNotifyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_wallet_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrawNotifyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_wallet_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrawNotifyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_wallet_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdCardRealNameAuthReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_wallet_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdCardRealNameAuthResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_wallet_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthPaymentSecretReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_wallet_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthPaymentSecretResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_wallet_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserQuiky); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cloud_wallet_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRechargeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cloud_wallet_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   49,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cloud_wallet_proto_goTypes,
		DependencyIndexes: file_cloud_wallet_proto_depIdxs,
		EnumInfos:         file_cloud_wallet_proto_enumTypes,
		MessageInfos:      file_cloud_wallet_proto_msgTypes,
	}.Build()
	File_cloud_wallet_proto = out.File
	file_cloud_wallet_proto_rawDesc = nil
	file_cloud_wallet_proto_goTypes = nil
	file_cloud_wallet_proto_depIdxs = nil
}
